# version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.auth
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - kafka

  # Payment Service
  payment-service:
    build:
      context: .
      dockerfile: Dockerfile.payment
    environment:
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - IYZICO_API_KEY=${IYZICO_API_KEY}
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - kafka

  # PostgreSQL
  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  # Redis (Cache i√ßin)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  # Prometheus
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # Grafana
  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: 